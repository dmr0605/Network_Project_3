From 39190994b19c64c47a9ce39778100a5d4c25a3a7 Mon Sep 17 00:00:00 2001
From: dmr0605 <dmr0605@gmail.com>
Date: Wed, 23 Dec 2009 14:54:26 -0500
Subject: [PATCH] Just for change professional sylist

---
 server/server.c |  519 +++++++++++++++++++++++++++----------------------------
 server/server.o |  Bin 11688 -> 11720 bytes
 2 files changed, 253 insertions(+), 266 deletions(-)

diff --git a/server/server.c b/server/server.c
index 3e6ff6c..fc1374d 100644
--- a/server/server.c
+++ b/server/server.c
@@ -16,6 +16,7 @@ Programming project 3rd
 #include <errno.h>
 #include <pthread.h>
 
+#define SIZE 1500
 
 int searchRequest();
 void server() ;
@@ -34,56 +35,56 @@ struct paramenter{
 
 //define main function
 int main(){
-	pthread_t tcp_id ;
-	pthread_t udp_id ;
-	// luong dap ung yeu cau download .
-	pthread_create(&tcp_id,NULL,(void*)server_download,NULL) ;
-	// luong dap ung yeu cau tim kiem .
-	pthread_create(&udp_id,NULL,(void*)server,NULL) ;
-	// chuc nang request.
-	for(;;){
-		int number ;
-		number = searchRequest() ;
-		if(number == 0){
-			printf("There're no server which named contain keyword entering... \n") ;
-			printf("----------------------------------------------------------\n") ;
-			printf("Enter another keyword searching.... \n") ;
-			printf("Enter idiot number to escape (Not number 1 )... \n") ;
-			fflush(stdin) ;
-			int c ;
-			scanf("%d",&c) ;
-			if(c == 0)
-				continue ;
-			else
-				exit(1) ;
-		}
-		else{
-			printf("Nhap 1 de tim kiem voi tu khoa khac \n") ;
-			printf("Nhap 2 de xem list file phu hop download file tu 1 server xac dinh\n") ;
-			printf("Nhap so bat ky (khac 1,2) de thoat \n") ;
-			fflush(stdin) ;
-			int c ;
-			scanf("%d",&c) ;
-			switch(c){
-				case 1 :
-					continue ;
-				case 2 :
-					client_download() ;
-					continue ;
-				default :
-					exit(1) ;
-			}
-		}
-		printf("--------------------------------------------------\n") ;
-	}
-     return 0 ;
+  pthread_t tcp_id;
+  pthread_t udp_id;
+  pthread_create(&tcp_id,NULL,(void*)server_download,NULL);
+  pthread_create(&udp_id,NULL,(void*)server,NULL);
+  for(;;){
+    int number;
+    number = searchRequest();
+    if(number == 0){
+      printf("There're no server which named contain keyword entering... \n");
+      printf("----------------------------------------------------------\n");
+      printf("Enter another keyword searching.... \n");
+      printf("Enter idiot number to escape (Not number 1 )... \n");
+      fflush(stdin);
+      int c;
+      scanf("%d",&c);
+      if(c == 0)
+	continue;
+      else
+	exit(1);
+    }
+    else{
+      printf("Enter keyword 1 to search another keyword... \n");
+      printf("Enter keyword 2 to view list download file comfortable from 1 fixed server....\n");
+      printf("Press any keyword differents to escapce... \n");
+      fflush(stdin);
+      int c;
+      scanf("%d",&c);
+      switch(c){
+      case 1 :
+	continue;
+      case 2 :
+	client_download();
+	continue;
+      default :
+	exit(1);
+      }
+    }
+    printf("--------------------------------------------------\n");
+  }
+  return 0;
 }
 
 
 static void recvfrom_alarm(int signo){
 	return;
 }
+
+//function searchRequest
 int searchRequest(){
+
   int result = 0;
   int sockfd;
   int nBytes;
@@ -104,99 +105,100 @@ int searchRequest(){
     return 1; //number signal error creating...
   }
 
-  printf("Nhap ten file can tim kiem : \n");
+  printf("Enter filename for searching.... : \n");
   scanf("%s",fileName);
 // thiet lap thuoc tinh broadcast cho socket.
   const int on = 1;
   setsockopt(sockfd, SOL_SOCKET, SO_BROADCAST, &on, sizeof(on));
-// ham sysv_signal thay the ham signal
 
+// ham sysv_signal thay the ham signal
   sysv_signal(SIGALRM, recvfrom_alarm);
+
   nBytes = sendto(sockfd, fileName, strlen(fileName), 0,(struct sockaddr*) &serveraddr , sizeof(serveraddr));
   alarm(5);
-
   for(;;){
     struct sockaddr_in	preply_addr;
     len = sizeof(preply_addr);
     char * recvString;
-    recvString = (char*)malloc(1500);
+    recvString = (char*)malloc(SIZE);
     int n;
-    n = recvfrom(sockfd, recvString, 1500, 0, (struct sockaddr*)&preply_addr, (socklen_t*)&len);	
-		if(n < 0){
-			if (errno == EINTR){
-				break;
-			}
-			else
-				continue;
-		}
- 		//char out[128];
-		const char *str;
-		str = (char*)malloc(50) ;
-		str = inet_ntoa(preply_addr.sin_addr) ;
-		printf("<+> from %s :\n%s \n",str,recvString) ;
-		result ++ ;
-	}	
-	return result ;
+    n = recvfrom(sockfd, recvString, SIZE, 0, (struct sockaddr*)&preply_addr, (socklen_t*)&len);
+    if(n < 0){
+      if (errno == EINTR){
+	break;
+      }
+      else 
+	continue;
+    }
+
+    const char *str;
+    str = (char*)malloc(50);
+
+    /*
+      function converts the Internet host address in given in network byte order to a string in standard numbers-and-dots notation. The string is returned in a statically allocated buffer, which subsequent calls will overwrite.  
+    */
+    str = inet_ntoa(preply_addr.sin_addr);
+    printf("<+> from %s :\n%s \n",str,recvString);
+    result ++;
+  }
+  return result;
 }
 
 
 void server(){
-	pthread_detach(pthread_self()) ;
-	int fd ;
-	int nBytes ;	
-
-     if((fd = socket(AF_INET,SOCK_DGRAM,0)) < 0){
-		perror("error when create socket") ;
-          exit(1) ;
-     }
-
-	// khai bao cau truc dia chi cua server , client
-     struct sockaddr_in serveraddr ;
-	struct sockaddr_in clientaddr ;
-	int len_sock_server = sizeof(serveraddr) ;
-	int len_sock_client = sizeof(clientaddr) ;
-
-	bzero(&serveraddr, len_sock_server) ;
-     serveraddr.sin_family = AF_INET ;
-     serveraddr.sin_port = htons(12345) ;
-     serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
-
-	// lang nghe ket noi 
-	if(bind(fd, (struct sockaddr*) &serveraddr,len_sock_server) < 0){
-		perror("could not open socket") ;
-		exit(1) ;
-	}
+  pthread_detach(pthread_self());
+  int fd;
+  int nBytes;
 
-	for(;;){
-		pthread_t newThread ;
-		// nhan ten file tu may khach.
-		char * fileName ;
-		fileName = (char*)malloc(25) ;
-		nBytes = recvfrom(fd, fileName, 25, 0 ,(struct sockaddr*) &clientaddr, (socklen_t*) &len_sock_client);
-		if(nBytes < 0) {	
-			if(errno == EINTR){
-				printf("server : SIGALRM : \n") ;
-				continue ;
-			}
-			else{
-				perror("recvfrom of server : "); 
-				break;
-			}
-		}
-		
-		// gan gia tri cho cac thanh phan cua bien cau truc paramenter.
-		struct paramenter paramenters ;
-		paramenters.fd = fd ;
-		paramenters.fileName = (char*)malloc(25) ;
-		strcpy(paramenters.fileName,fileName) ;
-		paramenters.clientaddr = clientaddr ;
-
-		// tao thread xu li viec tra loi request tu cac may.
-		int t = pthread_create(&newThread,NULL,(void*) doit,(void *)&paramenters) ;
-		if(t != 0){
-			perror("could not create new thread\n") ;
-		}
-	}
+  if((fd = socket(AF_INET,SOCK_DGRAM,0)) < 0){
+    perror("error when create socket");
+    exit(1);
+  }
+// khai bao cau truc dia chi cua server , clien
+  struct sockaddr_in serveraddr;
+  struct sockaddr_in clientaddr;
+  int len_sock_server = sizeof(serveraddr);
+  int len_sock_client = sizeof(clientaddr);
+
+  bzero(&serveraddr, len_sock_server);
+  serveraddr.sin_family = AF_INET;
+  serveraddr.sin_port = htons(12345);
+  serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
+
+	// lang nghe ket noi
+  if(bind(fd, (struct sockaddr*) &serveraddr,len_sock_server) < 0){
+    perror("could not open socket");
+    exit(1);
+  }
+
+  for(;;){
+    pthread_t newThread;
+// nhan ten file tu may khach.
+    char * fileName;
+    fileName = (char*)malloc(25);
+    nBytes = recvfrom(fd, fileName, 25, 0 ,(struct sockaddr*) &clientaddr, (socklen_t*) &len_sock_client);
+    if(nBytes < 0){
+      if(errno == EINTR){
+	printf("server : SIGALRM : \n");
+	continue;
+      }
+      else{
+	perror("recvfrom of server : ");
+	break;
+      }
+    }
+// gan gia tri cho cac thanh phan cua bien cau truc paramenter.
+    struct paramenter paramenters;
+    paramenters.fd = fd;
+    paramenters.fileName = (char*)malloc(25);
+    strcpy(paramenters.fileName,fileName);
+    paramenters.clientaddr = clientaddr;
+// tao thread xu li viec tra loi request tu cac may.
+    int t = pthread_create(&newThread,NULL,(void*) doit,(void *)&paramenters);
+    if(t != 0){
+      perror("could not create new thread\n");
+    }
+  }
 }
 
 
@@ -233,9 +235,9 @@ void doit(void * arg){
     fseek (finput,0,SEEK_SET);
 	
     char * ch;
-    ch = (char *) malloc(1500);
+    ch = (char *) malloc(SIZE);
     int n;
-    n = fread(ch,sizeof(char),1500,finput);
+    n = fread(ch,sizeof(char),SIZE,finput);
     if(n < 0){
       printf("can't read file\n");
     }
@@ -252,160 +254,145 @@ void doit(void * arg){
 
 void client_download(){
 	// nhap dia chi server
-	char serverIP[15] ;
-	printf("Nhap dia chi ip cua server : ") ;
-	scanf("%s",serverIP) ;
-
-	// khai bao socket 
-
-	int nbytes ;
-
-	// tao ket noi tcp de download file.
-	int TCP_socket ;
-	TCP_socket = socket(AF_INET,SOCK_STREAM,0) ;
-	if(TCP_socket < 0){
-		perror("Error when create socket") ;
-		return ;
-	}
-
-	// khai bao dia chi may , giao thuc tang duoi, cong cua socket.
-	struct sockaddr_in TCP_server_addr ;
-
-	bzero(&TCP_server_addr,sizeof(TCP_server_addr)) ;
-	TCP_server_addr.sin_family = AF_INET ;
-	TCP_server_addr.sin_port = htons(54321) ;
-	TCP_server_addr.sin_addr.s_addr = inet_addr(serverIP) ;
+  char serverIP[15];
+  printf("Nhap dia chi ip cua server : ");
+  scanf("%s",serverIP);
+// khai bao socket 
+  int nbytes;
+// tao ket noi tcp de download file.
+  int TCP_socket;
+  TCP_socket = socket(AF_INET,SOCK_STREAM,0);
+  if(TCP_socket < 0){
+    perror("Error when create socket");
+    return;
+  }
+// khai bao dia chi may , giao thuc tang duoi, cong cua socket.
+  struct sockaddr_in TCP_server_addr;
+  bzero(&TCP_server_addr,sizeof(TCP_server_addr));
+  TCP_server_addr.sin_family = AF_INET;
+  TCP_server_addr.sin_port = htons(54321);
+  TCP_server_addr.sin_addr.s_addr = inet_addr(serverIP);
+// connect toi server.
+  if(connect(TCP_socket,(struct sockaddr*)&TCP_server_addr,sizeof(TCP_server_addr)) < 0){
+    perror("Error when connect to server");
+    return;
+  }
+  char correctName[50];
+  printf("Go chinh xac ten file can download : \n");
+  scanf("%s",correctName);
+  nbytes = send(TCP_socket,correctName,50,0);
+  FILE * foutput;
+  foutput = fopen(correctName, "wb");
+  if(foutput == NULL){
+    perror("Error when create new file");
+    return;
+  }
+//nhan du lieu tu client.
+  char * ch;
+  int nbyte;
+  for(;;){
+    int n;
+    ch =(char*)malloc(512);
+    nbyte = recv(TCP_socket,ch,512,0);
+    if(nbyte < 512){
+      if(nbyte > 0)
+//n = fwrite(ch,sizeof(char),strlen(ch),foutput) ;
+	n = fwrite(ch,sizeof(char),nbyte,foutput);
+      break;
+    }
+    else 
+      n = fwrite(ch,sizeof(char),512,foutput);
+  }
 
-	// connect toi server.
-	if(connect(TCP_socket,(struct sockaddr*)&TCP_server_addr,sizeof(TCP_server_addr)) < 0){
-		perror("Error when connect to server") ;
-		return ;
-	}
-	
-	char correctName[50] ;
-	printf("Go chinh xac ten file can download : \n") ;
-	scanf("%s",correctName) ;
-	nbytes = send(TCP_socket,correctName,50,0) ;
-
-	FILE * foutput ;
-	foutput = fopen(correctName, "wb") ;
-	if(foutput == NULL){
-		perror("Error when create new file") ;
-		return ;
-	}
-	//nhan du lieu tu client.
-	char * ch ;
-	int nbyte ;
-	for(;;){
-		int n;
-		ch =(char*)malloc(512) ;
-		nbyte = recv(TCP_socket,ch,512,0) ;
-		if(nbyte < 512){
-			if(nbyte > 0)
-				//n = fwrite(ch,sizeof(char),strlen(ch),foutput) ;
-				n = fwrite(ch,sizeof(char),nbyte,foutput) ;
-			break ;
-		}
-		else
-			n = fwrite(ch,sizeof(char),512,foutput) ;
-	}	
-
-	fclose(foutput) ;
-
-	printf("download completed \n") ;
-	printf("----------------------------------------------------------\n") ;
+  fclose(foutput);
+  printf("download completed \n");
+  printf("----------------------------------------------------------\n");
 }
 
 // Ham download phuc vu yeu cau download mot file voi ten chinh xac.
 void server_download(){
-	pthread_detach(pthread_self()) ;
-	// tao mot socket tcp cho viec truyen du lieu.
-	int serverSocket ;
-	int newsocket ;
-	serverSocket = socket(AF_INET,SOCK_STREAM,0) ;
-	if(serverSocket < 0){
-		perror("Error of create a new socket") ;
-		return ;
-	}
-
-	// dat che do su dung lai dia chi 
-	int yes = 1;
-     // "Address already in use" error message 
-     if(setsockopt(serverSocket, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(int)) == -1){	
-		perror("setsockopt() error");
-		exit(1);
-     }
-
-	//
-	// khai bao cau truc dia chi server cung nhu client.
-	struct sockaddr_in sock_addr_server ;
-	struct sockaddr_in sock_addr_client ;
-	int len_sock_server = sizeof(sock_addr_server) ;
-	int len_sock_client = sizeof(sock_addr_client) ;
-
-	bzero(&sock_addr_server,len_sock_server) ;
-	sock_addr_server.sin_family = AF_INET ;
-	sock_addr_server.sin_port = htons(54321) ;
-	sock_addr_server.sin_addr.s_addr = htonl(INADDR_ANY) ;
+  pthread_detach(pthread_self());
+// tao mot socket tcp cho viec truyen du lieu
+  int serverSocket;
+  int newsocket;
+  serverSocket = socket(AF_INET,SOCK_STREAM,0);
+  if(serverSocket < 0){
+    perror("Error of create a new socket");
+    return;
+  }
+// dat che do su dung lai dia chi 
+  int yes = 1;
+// "Address already in use" error message 
+  if(setsockopt(serverSocket, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(int)) == -1){
+    perror("setsockopt() error");
+    exit(1);
+  }
+// khai bao cau truc dia chi server cung nhu client.
+  struct sockaddr_in sock_addr_server;
+  struct sockaddr_in sock_addr_client;
+  int len_sock_server = sizeof(sock_addr_server);
+  int len_sock_client = sizeof(sock_addr_client);
+
+  bzero(&sock_addr_server,len_sock_server);
+  sock_addr_server.sin_family = AF_INET;
+  sock_addr_server.sin_port = htons(54321);
+  sock_addr_server.sin_addr.s_addr = htonl(INADDR_ANY);
 	
-	if(bind(serverSocket,(struct sockaddr*)&sock_addr_server,len_sock_server) < 0){
-		perror("Error when assign address for socket") ;
-		return ;
+  if(bind(serverSocket,(struct sockaddr*)&sock_addr_server,len_sock_server) < 0){
+    perror("Error when assign address for socket");
+    return ;
+  }
+// lang nghe kenh truyen 
+  if(listen(serverSocket,5) < 0){
+    perror("Error when listen connection");
+    return;
+  }
+  for(;;){
+    int nbyte;
+// chap nhan ket noi tu client.
+    newsocket = accept(serverSocket,(struct sockaddr*)&sock_addr_client,(socklen_t*)&len_sock_client);
+    if(newsocket < 0 ){
+      perror("Error when accept a connection from client");
+      return;
+    }
+// nhan ten file chinh xac can download tu client
+    char correctName[50];
+    nbyte = recv(newsocket,correctName,50,0);
+// khai bao file .
+    FILE * fileDownload;
+    char filename[100] = "/tmp/k51mmt/";
+    strcat(filename,correctName); // ham noi hai xau lai voi nhau
+    fileDownload = fopen(filename,"rb");
+    if(fileDownload == NULL){
+      perror("Error when open new file");
+      return;
+    }
+// qua trinh download
+    char * ch;
+    int n = 0;
+    for(;;){
+      ch = (char*) malloc(512);
+      n = fread(ch,sizeof(char),512,fileDownload);
+      if(n < 512){
+	if (n > 0){
+	  nbyte = send(newsocket,ch,n,0);
+	  if(nbyte < 0){
+	    perror("Error when write data");
+	  }
 	}
-
-	// lang nghe kenh truyen 
-	if(listen(serverSocket,5) < 0){
-		perror("Error when listen connection") ;
-		return ;
+	if (feof(fileDownload)){
+	  break;
 	}
-	for(;;){	
-		int nbyte ;
-		// chap nhan ket noi tu client.
-		newsocket = accept(serverSocket,(struct sockaddr*)&sock_addr_client,(socklen_t*)&len_sock_client) ;
-		if(newsocket < 0 ){
-			perror("Error when accept a connection from client") ;
-			return ;
-		}
-		// nhan ten file chinh xac can download tu client.
-		char correctName[50] ;
-		nbyte = recv(newsocket,correctName,50,0) ;
-		
-		// khai bao file .
-		FILE * fileDownload ;
-		char filename[100] = "/tmp/k51mmt/" ;
-		strcat(filename,correctName) ; // ham noi hai xau lai voi nhau
-		fileDownload = fopen(filename,"rb") ;
-		if(fileDownload == NULL){
-			perror("Error when open new file") ;
-			return ;
-		}
-	
-		// qua trinh download
-		char * ch ;
-		int n = 0 ;
-		for(;;){
-			ch = (char*) malloc(512) ;
-			n = fread(ch,sizeof(char),512,fileDownload) ;
-			if(n < 512){
-				if (n > 0){
-					nbyte = send(newsocket,ch,n,0) ;
-					if(nbyte < 0){
-						perror("Error when write data") ;
-					}
-				}	
-				if (feof(fileDownload)){
-					break ;
-				}
-			}
-			else {
-				nbyte = send(newsocket,ch,512,0) ;
-				if(nbyte < 0){
-					perror("Error when write data") ;
-				}
-			}
-		}
-		fclose(fileDownload) ;
-		//close(newsocket) ;
+      }
+      else {
+	nbyte = send(newsocket,ch,512,0);
+	if(nbyte < 0){
+	  perror("Error when write data");
 	}
+      }
+    }
+    fclose(fileDownload);
+//close(newsocket) ;
+  }
 }
 
diff --git a/server/server.o b/server/server.o
index d1979b53720d6068a4897b94988e6ad7fff8ab55..2faed82cff73c153d9a118e7db6009a923c63702 100644
GIT binary patch
delta 539
zcmY+9KTH#07{>3tV&a*IBIRFV@PpF!%8_f@7>!dWb1*5RVSuCeot(CJ_}zuVB)By(
z7JU|DbYQBEq=}J9owO6^(ljAqCMJq(Y<?FE#&3AuH+i4@p67cz_jPVlr_JqL=i=kr
ze#8ZP$k%Fta9Dvw0Smb;%1g}lgJ|jB%`{D>D9Zo-V(ee>c#T!OFk((n^DBYvFxRVa
zRt~CeAR>EF?yd-`lJ0t|+>rrdg$oHZ6+^izco@pCwX+hA=ek^QKMG?y56kv)nM*TX
z^ctzN3UP#QS0y?Se=B?b{TSNn^bS+&=+bb4_Mr8DQG0suz5fPHKuea?={`KVGKhtw
zPSdC-OT^HYszVznN&k#gy;UC=(&#d_M)S0QZ==8HDL!Ab=ruH!rw_O#b-(4Yn?wiL
z8f(ZyVZ2Gl=#Dqk^C}*sO!caYSE*-IL~i2a$Q@Pomhbr7>AWCEyv~BsdAf%}x=8}v
zv_(%amYJuQ*vQBTY-cQbkCRM;c2Upf=?FVg_i>oD)WHObx~YvMPLaU#>=4%VWx9^v
tdPjb)owJCeZ?Z|N*qOBG4al(Q6K0Hg`hj;w9NaZ(^b@mFv9_lU{s6n4uJHf>

delta 506
zcmX|+F-RL>6vut11yj&ACRXEMU$jZ?ypR}&+ATPg!$q1-Ee>*;D|aO3uI4m$C_1?4
z&{+O-Ea;TRL6mF?ElzDIlsbu15d_IpbSMUwewRqU;rBk?_y7L?_r6Vkn%<Pj*;h`w
zR;End;S^^LcCC5NS;jms*%rHtoHK1*K%e6_ahkd@Pq!>2d8_F1D=TlXV=l63JDjyk
zg}kk2TV3%z#YJOb$ynfJ;gGcorss0&Q?z+jcRBZl19CGV6(3WYGl)zVJKgF)GtV^&
zEx$Rv@PEGAb$372?%fZy(;k$-SLwVRSAoaW0VSB0WIx{bJiuyDCK=UWn%Yno?1a*r
z7J5stvsUfx^NH5cV3MBUa_|qiID4qk8Wc{_N4yj~tgZ7n(Ptcm%i<w3RH0)uhRV_f
zVPiNU-4G6j-;p1akG_NwQfs-ZJFR+G6z@8Ua3o1jkcm_%gGNLn9TU+RDq%Y+B5)kl
z=mSErGVP)oOVTf#3Le5IYtml{&*g-#acd3i$NI1(I~0UpIT6d%6^))EHBzA$I33aG
dEyAisTd>p_`hoAN7u--w^b@b+9_#Vn{{XN0pxFQb

-- 
1.6.3.3

